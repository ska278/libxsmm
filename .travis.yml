sudo: false

language: cpp

branches:
  except:
  - develop
  - results

matrix:
  fast_finish: true
  include:
  - os: linux
    compiler: gcc
    env: OPT=1 PYTHON=python3
  - os: linux
    compiler: gcc
    env: DBG=1 LIBXSMM_TARGET=sse
  - os: linux
    compiler: clang
    env: DBG=1 LIBXSMM_TARGET=0
  - os: osx
    #osx_image: xcode9.1
    compiler: clang
    env: OPT=1
  - os: osx
    osx_image: xcode6.4
    compiler: clang
    env: DBG=1

env:
  global:
  - UPLOAD_DIR=libxsmm
  - LIBXSMM_VERBOSE=2
  - PEDANTIC_HIGH="PEDANTIC=2"
  - PEDANTIC_TEST="PEDANTIC=1"

addons:
  apt:
    packages:
    - gfortran
    - libblas-dev
    - liblapack-dev
    - python3
    - sshpass

#before_install:
#  - if [ "${CODECOV_ENABLED}" = "" ] || [ "${CODECOV_ENABLED}" != "0" ]; then
#      if [ "${TRAVIS_OS_NAME}" = "osx" ] && [ "${CC}" != "clang" ]; then sudo easy_install pip; fi;
#    fi

install:
  #- if [ "${CODECOV_ENABLED}" = "" ] || [ "${CODECOV_ENABLED}" != "0" ]; then
  #    if [ "${CC}" != "clang" ]; then pip install --user codecov; fi;
  #  fi
  - if [ "${UPLOAD_ENABLED}" != "" ] && [ "${UPLOAD_ENABLED}" != "0" ] && [ "" = "$(which sshpass)" ]; then
      (cd /tmp && curl -O -L https://downloads.sourceforge.net/project/sshpass/sshpass/1.06/sshpass-1.06.tar.gz &&
        tar xvzf sshpass-1.06.tar.gz && cd sshpass-1.06 && ./configure && make ${MAKEJ} && sudo make install &&
        cd ${TRAVIS_BUILD_DIR}) || true;
    fi

after_success:
  - eval ${CODECOV}

before_script:
  - source .env/travis.env

script:
  - source ${TRAVIS_BUILD_DIR}/.env/codecov.env $(if [ "${CC}" != "clang" ]; then echo 1; else echo 0; fi) && make -e clean && (
      make ${MAKEJ} -e PREFIX=${UPLOAD_DIR} ${PEDANTIC_HIGH} TRACE=1 STATIC=0 ABSLIBS=1 EFLAGS="-DITYPE=double" install-artifacts tests &&
      if [ "${CXX}" != "g++" ] && [ "${TRAVIS_OS_NAME}" != "osx" ]; then
        env LIBXSMM_TRACE=1 ${TRAVIS_BUILD_DIR}/tests/blas 2> blas-trace-${COVID}.txt;
        env LIBXSMM_TRACE=1 ${TRAVIS_BUILD_DIR}/tests/malloc 2> malloc-trace-${COVID}.txt;
      fi
    ) 2>&1 | tee .test.log && eval ${POSTPROC} && eval ${RUNXCOV}; eval ${UPLOAD}

  - source ${TRAVIS_BUILD_DIR}/.env/codecov.env $(if [ "${CC}" != "clang" ]; then echo 1; else echo 0; fi) && make -e clean && (
      make ${MAKEJ} -e PREFIX=${UPLOAD_DIR} ${PEDANTIC_HIGH} TRACE=1 MNK="19 27, 23" EFLAGS="-DLIBXSMM_MALLOC_MMAP" install-artifacts test-cp2k
    ) 2>&1 | tee .test.log && eval ${POSTPROC} && eval ${RUNXCOV}; eval ${UPLOAD}

  - source ${TRAVIS_BUILD_DIR}/.env/codecov.env $(if [ "${CC}" != "clang" ]; then echo 1; else echo 0; fi) && make -e clean && (
      make ${MAKEJ} -e PREFIX=${UPLOAD_DIR} ${PEDANTIC_HIGH} SYM=1 MNK="4 8" STATIC=0 PREFETCH=0 CACHE=0 EFLAGS="-DLIBXSMM_NO_CTOR" install-artifacts test-nek
    ) 2>&1 | tee .test.log && eval ${POSTPROC} && eval ${RUNXCOV}; eval ${UPLOAD}

  - source ${TRAVIS_BUILD_DIR}/.env/codecov.env $(if [ "${CC}" != "clang" ]; then echo 1; else echo 0; fi) && make -e clean && (
      make ${MAKEJ} -e PREFIX=${UPLOAD_DIR} ${PEDANTIC_HIGH} SYM=1 PYMOD=1 EFLAGS="-DLIBXSMM_NO_CTOR" install-artifacts tests
    ) 2>&1 | tee .test.log && eval ${POSTPROC} && eval ${RUNXCOV}; eval ${UPLOAD}

  - source ${TRAVIS_BUILD_DIR}/.env/codecov.env $(if [ "${CC}" != "clang" ]; then echo 1; else echo 0; fi) && make -e clean && (
      env TOOL_ENABLED=0 make ${MAKEJ} -e PREFIX=${UPLOAD_DIR} ${PEDANTIC_HIGH} SYM=1 MNK="9 3, 23" STATIC=0 EFLAGS="-DLIBXSMM_CAPACITY_REGISTRY=32" install-artifacts test-smm
    ) 2>&1 | tee .test.log && eval ${POSTPROC} && eval ${RUNXCOV}; eval ${UPLOAD}

  - source ${TRAVIS_BUILD_DIR}/.env/codecov.env $(if [ "${CC}" != "clang" ]; then echo 1; else echo 0; fi) && make -e clean && (
      make ${MAKEJ} -e PREFIX=${UPLOAD_DIR} ${PEDANTIC_HIGH} SYM=1 EFLAGS="-DELEM_TYPE=char" install-artifacts tests
    ) 2>&1 | tee .test.log && eval ${POSTPROC} && eval ${RUNXCOV}; eval ${UPLOAD}

  - source ${TRAVIS_BUILD_DIR}/.env/codecov.env $(if [ "${CC}" != "clang" ]; then echo 1; else echo 0; fi) && make -e clean && (
      make ${MAKEJ} -e PREFIX=${UPLOAD_DIR} ${PEDANTIC_HIGH} SYM=1 SSE=0 AVX=0 JIT=0 EFLAGS="-DELEM_TYPE=short" install-artifacts tests
    ) 2>&1 | tee .test.log && eval ${POSTPROC} && eval ${RUNXCOV}; eval ${UPLOAD}

  - source ${TRAVIS_BUILD_DIR}/.env/codecov.env $(if [ "${CC}" != "clang" ]; then echo 1; else echo 0; fi) && make -e clean && (
      make ${MAKEJ} -e ${PEDANTIC_TEST} VLA=0 WRAP=1 test-wrap
    ) 2>&1 | tee .test.log && eval ${POSTPROC} && eval ${RUNXCOV}

  - source ${TRAVIS_BUILD_DIR}/.env/codecov.env $(if [ "${CC}" != "clang" ]; then echo 1; else echo 0; fi) && make -e clean && (
      make ${MAKEJ} -e ${PEDANTIC_TEST} VLA=0 WRAP=1 STATIC=1 test-wrap
    ) 2>&1 | tee .test.log && eval ${POSTPROC} && eval ${RUNXCOV}

  - source ${TRAVIS_BUILD_DIR}/.env/codecov.env $(if [ "${CC}" != "clang" ]; then echo 1; else echo 0; fi) && make -e clean && (
      make ${MAKEJ} -e ${PEDANTIC_TEST} VLA=0 WRAP=1 STATIC=0 test-wrap
    ) 2>&1 | tee .test.log && eval ${POSTPROC} && eval ${RUNXCOV}

  - source ${TRAVIS_BUILD_DIR}/.env/codecov.env $(if [ "${CC}" != "clang" ]; then echo 1; else echo 0; fi) && make -e clean && (
      make -e ${PEDANTIC_HIGH} AVX=3 MIC=0 OMP=1 test-cpp && make -e ${PEDANTIC_HIGH} AVX=2 THREADS=0 test-cpp && make -e ${PEDANTIC_HIGH} AVX=1 VLA=0 test-cpp
    ) 2>&1 | tee .test.log && eval ${POSTPROC}

